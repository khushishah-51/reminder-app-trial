<!--
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ title }}</title>
    <link rel="stylesheet" href="style.css">
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
</head>
<body>

<div class="todo__wrapper">
    <div class="todo__content">
        <h1>Reminder</h1>
        <form class="newItem">
            <div class="newItem__input">
                
                <button type="button" id="createtaskButton">
                    <a href="/tasks">
                    <i class="fas fa-plus"></i>
                    Create TASK...
                </button>   
                </a>                  
            </div>

        </form>
        <ul class="todo__list">
            {{#each tasks}}
            <li class="todo__item">
                <input type="checkbox" id="{{_id}}" {{#if isCompleted}}checked{{/if}} onchange="handleCheck('{{_id}}')">
                <label for="{{_id}}">
                <span class="check__box">
                    {{#if isCompleted}}
                    <i class="fas fa-check check__pointer"></i>
                    {{else}}
                    <i class="far fa-check check__pointer"></i>
                    {{/if}}
                </span>
                <span class="item__title">{{title}}</span> 
                <span class="item__description">{{description}}</span>
                <span class="item__description">{{dueDate}}</span> 
                </label>
                    <form class="editForm" style="display: none;">
                        <input type="text" class="edit__title" placeholder="Title">
                        <input type="text" class="edit__description" placeholder="Description">
                        <input type="date" class="edit__dueDate">
                        <button type="button" class="save__button" onclick="saveTask('{{_id}}')">Save</button>
                    </form>                
                
                    <div class="item__buttons">
                        
                        <button type="button" class="edit__button" onclick="showEditForm('{{_id}}')">Edit</button>
                        
                       
                        <button type="button" class="delete__button" onclick="deleteTask('{{_id}}')">
                            <i class="fas fa-trash-alt"></i>Delete
                        </button>
                        
                    </div>                
                <i class="fas fa-trash-alt item__trash-can"></i>
            </li>
            {{/each}}
        </ul>
    </div>
</div>
    <script>
        // Function to delete a task
        function deleteTask(taskId) {
            if (confirm('Are you sure you want to delete this task?')) {
                fetch(`/task/${taskId}`, {
                    method: 'DELETE'
                })
                .then(response => {
                    if (response.ok) {
                        // If deletion is successful, remove the task from the UI
                        const taskElement = document.getElementById(taskId);
                        if (taskElement) {
                            taskElement.parentNode.removeChild(taskElement);
                        }
                    } else {
                        // If deletion fails, show an error message
                        throw new Error('Failed to delete task');
                    }
                })
                .catch(error => {
                    console.error('Error deleting task:', error);
                    alert('Failed to delete task. Please try again later.');
                });
            }
        }

        // JavaScript
        function showEditForm(taskId) {
            const editForm = document.querySelector(`.todo__item[data-id="${taskId}"] .editForm`);
            editForm.style.display = 'block';
            
            // Populate edit form with existing task data
            const taskElement = document.querySelector(`.todo__item[data-id="${taskId}"]`);
            const title = taskElement.querySelector('.item__title').innerText;
            const description = taskElement.querySelector('.item__description').innerText;
            const dueDate = taskElement.querySelector('.item__dueDate').innerText;
            editForm.querySelector('.edit__title').value = title;
            editForm.querySelector('.edit__description').value = description;
            editForm.querySelector('.edit__dueDate').value = dueDate;
        }

        function saveTask(taskId) {
            const editForm = document.querySelector(`.todo__item[data-id="${taskId}"] .editForm`);
            const title = editForm.querySelector('.edit__title').value;
            const description = editForm.querySelector('.edit__description').value;
            const dueDate = editForm.querySelector('.edit__dueDate').value;

            const updatedTask = {
                title: title,
                description: description,
                dueDate: dueDate
            };

            fetch(`/tasks/${taskId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(updatedTask)
            })
            .then(response => {
                if (response.ok) {
                    // Reload the page or update the UI as needed
                    location.reload(); // Example: Reload the page
                } else {
                    throw new Error('Failed to update task');
                }
            })
            .catch(error => {
                console.error('Error updating task:', error);
                alert('Failed to update task. Please try again later.');
            });
        }

    </script>
</body>
</html>
-->
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ title }}</title>
    <link rel="stylesheet" href="style.css">
    <script src="https://kit.fontawesome.com/a076d05399.js" crossorigin="anonymous"></script>
</head>
<body>

<div class="todo__wrapper">
    <div class="todo__content">
        <h1>Reminder</h1>
        <form class="newItem">
            <div class="newItem__input">
                
                <button type="button" id="createtaskButton">
                    <a href="/tasks">
                    <i class="fas fa-plus"></i>
                    Create TASK...
                </button>   
                </a>                  
            </div>

        </form>
        <ul class="todo__list">
            {{#each tasks}}
            <li class="todo__item" data-id="{{_id}}">
                <input type="checkbox" id="{{_id}}" {{#if isCompleted}}checked{{/if}} onchange="handleCheck('{{_id}}')">
                <label for="{{_id}}">
                <span class="check__box">
                    {{#if isCompleted}}
                    <i class="fas fa-check check__pointer"></i>
                    {{else}}
                    <i class="far fa-check check__pointer"></i>
                    {{/if}}
                </span>
                <span class="item__title">{{title}}</span> 
                <span class="item__description">{{description}}</span>
                <span class="item__dueDate">{{dueDate}}</span> 
                </label>
                    <form class="editForm" style="display: none;">
                        <input type="text" class="edit__title" placeholder="Title">
                        <input type="text" class="edit__description" placeholder="Description">
                        <input type="date" class="edit__dueDate">
                        <button type="button" class="save__button" onclick="saveTask('{{_id}}')">Save</button>
                    </form>                
                
                    <div class="item__buttons">
                        
                        <button type="button" class="edit__button" onclick="showEditForm('{{_id}}')">Edit</button>
                        
                       
                        <button type="button" class="delete__button" onclick="deleteTask('{{_id}}')">
                            <i class="fas fa-trash-alt"></i>Delete
                        </button>
                        
                    </div>                
                <i class="fas fa-trash-alt item__trash-can"></i>
            </li>
            {{/each}}
        </ul>
    </div>
</div>
    <script>
        // Function to delete a task
        function deleteTask(taskId) {
            if (confirm('Are you sure you want to delete this task?')) {
                fetch(`/task/${taskId}`, {
                    method: 'DELETE'
                })
                .then(response => {
                    if (response.ok) {
                        // If deletion is successful, remove the task from the UI
                        const taskElement = document.getElementById(taskId);
                        if (taskElement) {
                            taskElement.parentNode.removeChild(taskElement);
                        }
                    } else {
                        // If deletion fails, show an error message
                        throw new Error('Failed to delete task');
                    }
                })
                .catch(error => {
                    console.error('Error deleting task:', error);
                    alert('Failed to delete task. Please try again later.');
                });
            }
        }

        // JavaScript
        function showEditForm(taskId) {
            const editForm = document.querySelector(`.todo__item[data-id="${taskId}"] .editForm`);
            editForm.style.display = 'block';
            
            // Populate edit form with existing task data
            const taskElement = document.querySelector(`.todo__item[data-id="${taskId}"]`);
            const title = taskElement.querySelector('.item__title').innerText;
            const description = taskElement.querySelector('.item__description').innerText;
            const dueDate = taskElement.querySelector('.item__dueDate').innerText;
            editForm.querySelector('.edit__title').value = title;
            editForm.querySelector('.edit__description').value = description;
            editForm.querySelector('.edit__dueDate').value = dueDate;
        }

        function saveTask(taskId) {
            const editForm = document.querySelector(`.todo__item[data-id="${taskId}"] .editForm`);
            const title = editForm.querySelector('.edit__title').value;
            const description = editForm.querySelector('.edit__description').value;
            const dueDate = editForm.querySelector('.edit__dueDate').value;

            const updatedTask = {
                title: title,
                description: description,
                dueDate: dueDate
            };

            fetch(`/tasks/${taskId}`, {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(updatedTask)
            })
            .then(response => {
                if (response.ok) {
                    // Update the UI with the new data
                    const taskElement = document.querySelector(`.todo__item[data-id="${taskId}"]`);
                    taskElement.querySelector('.item__title').innerText = title;
                    taskElement.querySelector('.item__description').innerText = description;
                    taskElement.querySelector('.item__dueDate').innerText = dueDate;

                    // Hide the edit form
                    editForm.style.display = 'none';
                } else {
                    throw new Error('Failed to update task');
                }
            })
            .catch(error => {
                console.error('Error updating task:', error);
                alert('Failed to update task. Please try again later.');
            });
        }

    </script>
</body>
</html>
